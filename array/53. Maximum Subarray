这道题用到了滑动窗口的思想：
所谓滑动窗口，就是不断的调节子序列的起始位置和终止位置，从而得出我们要想的结果。
一般来讲，for循环内的i指的是滑动窗口中的终止位置，而起始位置的更新是在for循环内通过常数复杂度的操作完成的，
这道题用滑动窗口比较难想，主要是因为以下两点：
1. 若一段连续数组元素array[i]~array[j]的和为负数，那么以其下一个元素array[j+1]为终点的最大子数组之和一定为array[j+1]本身。
   这一点很难想，这个难点涉及到了更新起始位置的方法。
2. 根据第一点更新起始位置，这道题并没有给出代表起始位置的变量，而是利用了temp = nums[j];更新了子数组的起始位置，比较隐晦。
------------------------------------------
class Solution {
    public int maxSubArray(int[] nums) {
        int result = Integer.MIN_VALUE;
        int temp = 0;
        for(int j = 0; j < nums.length;j++){
            temp = temp + nums[j];
            if(temp < nums[j]){
                temp = nums[j];
            }
            result = Math.max(temp,result);
        }
        return result;
    }
}
