这道题为我们提供了一个思路：将链表的元素存储在array中,在通过对array的操作达到我们想要的结果。
判断palindrome可以用双指针完成。
注意：这里因为我们不能预先知道数组的尺寸，所以用到了数组的封装类ArrayList,用法为：
1. 创造一个新数组 List<Integer> array = new ArrayList<>();
2. 在封装类内加入元素：array.add(cur.val);
3. 获得元素值：array.get(left)；
4. 比较类内值的大小：.equals(而不是==)

--------------------------------------------------------------
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        List<Integer> array = new ArrayList<>();
        ListNode cur = head;
        while(cur!= null){
            array.add(cur.val);
            cur = cur.next;
        }
        int left = 0;
        int right = array.size() - 1;
        while(left<right){
            if(!array.get(left).equals(array.get(right))){
                return false;
            }
            left ++;
            right--;
        }

        return true;
    }
}
